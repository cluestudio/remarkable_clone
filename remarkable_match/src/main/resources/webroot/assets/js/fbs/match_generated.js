// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
*/
var com = com || {};

/**
 * @const
*/
com.clue = com.clue || {};

/**
 * @const
*/
com.clue.fbs = com.clue.fbs || {};

/**
 * @enum
 */
com.clue.fbs.MessageType = {
  ReqJoin: 0,
  ResJoin: 1,
  NotiJoin: 2,
  NotiStart: 3,
  ReqSync: 4,
  NotiSync: 5,
  NotiDeploy: 6,
  NotiDamage: 7,
  NotiAbnormal: 8,
  NotiRevival: 9,
  NotiLvUp: 10,
  ResSyncError: 11,
  NotiEnd: 12,
  ReqRoomList: 13,
  ResRoomList: 14
};

/**
 * @enum
 */
com.clue.fbs.RoomType = {
  None: 0,
  Room1vs1: 1,
  Room2vs2: 2,
  Room3vs3: 3
};

/**
 * @enum
 */
com.clue.fbs.LeagueType = {
  Bronze: 0,
  Silver: 1,
  Gold: 2,
  End: 3
};

/**
 * @enum
 */
com.clue.fbs.RoomState = {
  Open: 0,
  Play: 1,
  Closed: 2
};

/**
 * @enum
 */
com.clue.fbs.UnitType = {
  Hero: 0,
  Pet: 1
};

/**
 * @enum
 */
com.clue.fbs.AbnormalType = {
  None: 0,
  Slow: 1,
  Iced: 2,
  Restrained: 3,
  Frozen: 4,
  Bleeding: 5,
  Berserk: 6,
  Charm: 7,
  Fear: 8
};

/**
 * @constructor
 */
com.clue.fbs.ReqJoin = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ReqJoin}
 */
com.clue.fbs.ReqJoin.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ReqJoin=} obj
 * @returns {com.clue.fbs.ReqJoin}
 */
com.clue.fbs.ReqJoin.getRootAsReqJoin = function(bb, obj) {
  return (obj || new com.clue.fbs.ReqJoin).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {com.clue.fbs.FBPlayer=} obj
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.ReqJoin.prototype.player = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBPlayer).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {com.clue.fbs.LeagueType}
 */
com.clue.fbs.ReqJoin.prototype.league = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {com.clue.fbs.LeagueType} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.LeagueType.Bronze;
};

/**
 * @returns {com.clue.fbs.RoomType}
 */
com.clue.fbs.ReqJoin.prototype.roomType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {com.clue.fbs.RoomType} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.RoomType.None;
};

/**
 * @returns {boolean}
 */
com.clue.fbs.ReqJoin.prototype.mirror = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ReqJoin.startReqJoin = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playerOffset
 */
com.clue.fbs.ReqJoin.addPlayer = function(builder, playerOffset) {
  builder.addFieldOffset(0, playerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.LeagueType} league
 */
com.clue.fbs.ReqJoin.addLeague = function(builder, league) {
  builder.addFieldInt8(1, league, com.clue.fbs.LeagueType.Bronze);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.RoomType} roomType
 */
com.clue.fbs.ReqJoin.addRoomType = function(builder, roomType) {
  builder.addFieldInt8(2, roomType, com.clue.fbs.RoomType.None);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} mirror
 */
com.clue.fbs.ReqJoin.addMirror = function(builder, mirror) {
  builder.addFieldInt8(3, +mirror, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ReqJoin.endReqJoin = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.ResJoin = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ResJoin}
 */
com.clue.fbs.ResJoin.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ResJoin=} obj
 * @returns {com.clue.fbs.ResJoin}
 */
com.clue.fbs.ResJoin.getRootAsResJoin = function(bb, obj) {
  return (obj || new com.clue.fbs.ResJoin).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
com.clue.fbs.ResJoin.prototype.roomId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.ResJoin.prototype.playerNo = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ResJoin.startResJoin = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} roomIdOffset
 */
com.clue.fbs.ResJoin.addRoomId = function(builder, roomIdOffset) {
  builder.addFieldOffset(0, roomIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerNo
 */
com.clue.fbs.ResJoin.addPlayerNo = function(builder, playerNo) {
  builder.addFieldInt8(1, playerNo, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ResJoin.endResJoin = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiJoin = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiJoin}
 */
com.clue.fbs.NotiJoin.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiJoin=} obj
 * @returns {com.clue.fbs.NotiJoin}
 */
com.clue.fbs.NotiJoin.getRootAsNotiJoin = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiJoin).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBPlayer=} obj
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.NotiJoin.prototype.members = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBPlayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiJoin.prototype.membersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiJoin.startNotiJoin = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} membersOffset
 */
com.clue.fbs.NotiJoin.addMembers = function(builder, membersOffset) {
  builder.addFieldOffset(0, membersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiJoin.createMembersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiJoin.startMembersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiJoin.endNotiJoin = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiStart = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiStart}
 */
com.clue.fbs.NotiStart.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiStart=} obj
 * @returns {com.clue.fbs.NotiStart}
 */
com.clue.fbs.NotiStart.getRootAsNotiStart = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiStart).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiStart.prototype.countDownTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiStart.prototype.playTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiStart.startNotiStart = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} countDownTime
 */
com.clue.fbs.NotiStart.addCountDownTime = function(builder, countDownTime) {
  builder.addFieldInt16(0, countDownTime, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playTime
 */
com.clue.fbs.NotiStart.addPlayTime = function(builder, playTime) {
  builder.addFieldInt16(1, playTime, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiStart.endNotiStart = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.ReqSync = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ReqSync}
 */
com.clue.fbs.ReqSync.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ReqSync=} obj
 * @returns {com.clue.fbs.ReqSync}
 */
com.clue.fbs.ReqSync.getRootAsReqSync = function(bb, obj) {
  return (obj || new com.clue.fbs.ReqSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.ReqSync.prototype.playerNo = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnitOrder=} obj
 * @returns {com.clue.fbs.FBUnitOrder}
 */
com.clue.fbs.ReqSync.prototype.orders = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new com.clue.fbs.FBUnitOrder).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.ReqSync.prototype.ordersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnitHit=} obj
 * @returns {com.clue.fbs.FBUnitHit}
 */
com.clue.fbs.ReqSync.prototype.hits = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new com.clue.fbs.FBUnitHit).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.ReqSync.prototype.hitsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ReqSync.startReqSync = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerNo
 */
com.clue.fbs.ReqSync.addPlayerNo = function(builder, playerNo) {
  builder.addFieldInt8(0, playerNo, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ordersOffset
 */
com.clue.fbs.ReqSync.addOrders = function(builder, ordersOffset) {
  builder.addFieldOffset(1, ordersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.ReqSync.startOrdersVector = function(builder, numElems) {
  builder.startVector(16, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} hitsOffset
 */
com.clue.fbs.ReqSync.addHits = function(builder, hitsOffset) {
  builder.addFieldOffset(2, hitsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.ReqSync.startHitsVector = function(builder, numElems) {
  builder.startVector(12, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ReqSync.endReqSync = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.ResSyncError = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ResSyncError}
 */
com.clue.fbs.ResSyncError.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ResSyncError=} obj
 * @returns {com.clue.fbs.ResSyncError}
 */
com.clue.fbs.ResSyncError.getRootAsResSyncError = function(bb, obj) {
  return (obj || new com.clue.fbs.ResSyncError).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.ResSyncError.prototype.playerNo = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.ResSyncError.prototype.reason = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ResSyncError.startResSyncError = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerNo
 */
com.clue.fbs.ResSyncError.addPlayerNo = function(builder, playerNo) {
  builder.addFieldInt8(0, playerNo, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} reason
 */
com.clue.fbs.ResSyncError.addReason = function(builder, reason) {
  builder.addFieldInt8(1, reason, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ResSyncError.endResSyncError = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiSync = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiSync}
 */
com.clue.fbs.NotiSync.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiSync=} obj
 * @returns {com.clue.fbs.NotiSync}
 */
com.clue.fbs.NotiSync.getRootAsNotiSync = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiSync).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiSync.prototype.sec = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiSync.prototype.playerNo = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnitOrder=} obj
 * @returns {com.clue.fbs.FBUnitOrder}
 */
com.clue.fbs.NotiSync.prototype.orders = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new com.clue.fbs.FBUnitOrder).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiSync.prototype.ordersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiSync.startNotiSync = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sec
 */
com.clue.fbs.NotiSync.addSec = function(builder, sec) {
  builder.addFieldInt16(0, sec, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerNo
 */
com.clue.fbs.NotiSync.addPlayerNo = function(builder, playerNo) {
  builder.addFieldInt8(1, playerNo, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ordersOffset
 */
com.clue.fbs.NotiSync.addOrders = function(builder, ordersOffset) {
  builder.addFieldOffset(2, ordersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiSync.startOrdersVector = function(builder, numElems) {
  builder.startVector(16, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiSync.endNotiSync = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiDeploy = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiDeploy}
 */
com.clue.fbs.NotiDeploy.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiDeploy=} obj
 * @returns {com.clue.fbs.NotiDeploy}
 */
com.clue.fbs.NotiDeploy.getRootAsNotiDeploy = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiDeploy).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnit=} obj
 * @returns {com.clue.fbs.FBUnit}
 */
com.clue.fbs.NotiDeploy.prototype.deploy = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBUnit).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiDeploy.prototype.deployLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiDeploy.startNotiDeploy = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} deployOffset
 */
com.clue.fbs.NotiDeploy.addDeploy = function(builder, deployOffset) {
  builder.addFieldOffset(0, deployOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiDeploy.createDeployVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiDeploy.startDeployVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiDeploy.endNotiDeploy = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiDamage = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiDamage}
 */
com.clue.fbs.NotiDamage.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiDamage=} obj
 * @returns {com.clue.fbs.NotiDamage}
 */
com.clue.fbs.NotiDamage.getRootAsNotiDamage = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiDamage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnitDamage=} obj
 * @returns {com.clue.fbs.FBUnitDamage}
 */
com.clue.fbs.NotiDamage.prototype.damages = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBUnitDamage).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiDamage.prototype.damagesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiDamage.startNotiDamage = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} damagesOffset
 */
com.clue.fbs.NotiDamage.addDamages = function(builder, damagesOffset) {
  builder.addFieldOffset(0, damagesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiDamage.startDamagesVector = function(builder, numElems) {
  builder.startVector(12, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiDamage.endNotiDamage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiAbnormal = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiAbnormal}
 */
com.clue.fbs.NotiAbnormal.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiAbnormal=} obj
 * @returns {com.clue.fbs.NotiAbnormal}
 */
com.clue.fbs.NotiAbnormal.getRootAsNotiAbnormal = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiAbnormal).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBAbnormal=} obj
 * @returns {com.clue.fbs.FBAbnormal}
 */
com.clue.fbs.NotiAbnormal.prototype.abnormal = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBAbnormal).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiAbnormal.prototype.abnormalLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiAbnormal.startNotiAbnormal = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} abnormalOffset
 */
com.clue.fbs.NotiAbnormal.addAbnormal = function(builder, abnormalOffset) {
  builder.addFieldOffset(0, abnormalOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiAbnormal.startAbnormalVector = function(builder, numElems) {
  builder.startVector(12, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiAbnormal.endNotiAbnormal = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiRevival = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiRevival}
 */
com.clue.fbs.NotiRevival.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiRevival=} obj
 * @returns {com.clue.fbs.NotiRevival}
 */
com.clue.fbs.NotiRevival.getRootAsNotiRevival = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiRevival).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {com.clue.fbs.FBUnit=} obj
 * @returns {com.clue.fbs.FBUnit}
 */
com.clue.fbs.NotiRevival.prototype.heroRevival = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBUnit).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiRevival.startNotiRevival = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} heroRevivalOffset
 */
com.clue.fbs.NotiRevival.addHeroRevival = function(builder, heroRevivalOffset) {
  builder.addFieldOffset(0, heroRevivalOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiRevival.endNotiRevival = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiLvUp = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiLvUp}
 */
com.clue.fbs.NotiLvUp.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiLvUp=} obj
 * @returns {com.clue.fbs.NotiLvUp}
 */
com.clue.fbs.NotiLvUp.getRootAsNotiLvUp = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiLvUp).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiLvUp.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiLvUp.prototype.level = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiLvUp.prototype.exp = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiLvUp.startNotiLvUp = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
com.clue.fbs.NotiLvUp.addKey = function(builder, key) {
  builder.addFieldInt16(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} level
 */
com.clue.fbs.NotiLvUp.addLevel = function(builder, level) {
  builder.addFieldInt8(1, level, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} exp
 */
com.clue.fbs.NotiLvUp.addExp = function(builder, exp) {
  builder.addFieldInt16(2, exp, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiLvUp.endNotiLvUp = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.NotiEnd = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.NotiEnd}
 */
com.clue.fbs.NotiEnd.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.NotiEnd=} obj
 * @returns {com.clue.fbs.NotiEnd}
 */
com.clue.fbs.NotiEnd.getRootAsNotiEnd = function(bb, obj) {
  return (obj || new com.clue.fbs.NotiEnd).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiEnd.prototype.winner = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBPlayer=} obj
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.NotiEnd.prototype.members = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new com.clue.fbs.FBPlayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.NotiEnd.prototype.membersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.NotiEnd.startNotiEnd = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} winner
 */
com.clue.fbs.NotiEnd.addWinner = function(builder, winner) {
  builder.addFieldInt8(0, winner, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} membersOffset
 */
com.clue.fbs.NotiEnd.addMembers = function(builder, membersOffset) {
  builder.addFieldOffset(1, membersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiEnd.createMembersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.NotiEnd.startMembersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.NotiEnd.endNotiEnd = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.ReqRoomList = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ReqRoomList}
 */
com.clue.fbs.ReqRoomList.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ReqRoomList=} obj
 * @returns {com.clue.fbs.ReqRoomList}
 */
com.clue.fbs.ReqRoomList.getRootAsReqRoomList = function(bb, obj) {
  return (obj || new com.clue.fbs.ReqRoomList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.ReqRoomList.prototype.pageCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ReqRoomList.startReqRoomList = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} pageCount
 */
com.clue.fbs.ReqRoomList.addPageCount = function(builder, pageCount) {
  builder.addFieldInt16(0, pageCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ReqRoomList.endReqRoomList = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.ResRoomList = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.ResRoomList}
 */
com.clue.fbs.ResRoomList.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.ResRoomList=} obj
 * @returns {com.clue.fbs.ResRoomList}
 */
com.clue.fbs.ResRoomList.getRootAsResRoomList = function(bb, obj) {
  return (obj || new com.clue.fbs.ResRoomList).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBRoomSet=} obj
 * @returns {com.clue.fbs.FBRoomSet}
 */
com.clue.fbs.ResRoomList.prototype.roomSet = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new com.clue.fbs.FBRoomSet).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.ResRoomList.prototype.roomSetLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.ResRoomList.startResRoomList = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} roomSetOffset
 */
com.clue.fbs.ResRoomList.addRoomSet = function(builder, roomSetOffset) {
  builder.addFieldOffset(0, roomSetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ResRoomList.createRoomSetVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.ResRoomList.startRoomSetVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.ResRoomList.endResRoomList = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.FBVec2 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBVec2.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBVec2.prototype.x = function() {
  return this.bb.readInt16(this.bb_pos);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBVec2.prototype.z = function() {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBVec2.createFBVec2 = function(builder, x, z) {
  builder.prep(2, 4);
  builder.writeInt16(z);
  builder.writeInt16(x);
  return builder.offset();
};

/**
 * @constructor
 */
com.clue.fbs.FBVecMini2 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBVecMini2}
 */
com.clue.fbs.FBVecMini2.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBVecMini2.prototype.x = function() {
  return this.bb.readInt8(this.bb_pos);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBVecMini2.prototype.z = function() {
  return this.bb.readInt8(this.bb_pos + 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBVecMini2.createFBVecMini2 = function(builder, x, z) {
  builder.prep(1, 2);
  builder.writeInt8(z);
  builder.writeInt8(x);
  return builder.offset();
};

/**
 * @constructor
 */
com.clue.fbs.FBPlayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.FBPlayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.FBPlayer=} obj
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.FBPlayer.getRootAsFBPlayer = function(bb, obj) {
  return (obj || new com.clue.fbs.FBPlayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.playerNo = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
com.clue.fbs.FBPlayer.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
com.clue.fbs.FBPlayer.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
com.clue.fbs.FBPlayer.prototype.profileUrl = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.score = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.towerLevel = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.hero = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.heroDeadTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBUnit=} obj
 * @returns {com.clue.fbs.FBUnit}
 */
com.clue.fbs.FBPlayer.prototype.units = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new com.clue.fbs.FBUnit).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.unitsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.killHeroCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.killPetCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.deadCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.dealToHero = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.dealToPet = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.damageFromHero = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBPlayer.prototype.damageFromPet = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.FBPlayer.startFBPlayer = function(builder) {
  builder.startObject(16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerNo
 */
com.clue.fbs.FBPlayer.addPlayerNo = function(builder, playerNo) {
  builder.addFieldInt8(0, playerNo, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
com.clue.fbs.FBPlayer.addId = function(builder, idOffset) {
  builder.addFieldOffset(1, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
com.clue.fbs.FBPlayer.addName = function(builder, nameOffset) {
  builder.addFieldOffset(2, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} profileUrlOffset
 */
com.clue.fbs.FBPlayer.addProfileUrl = function(builder, profileUrlOffset) {
  builder.addFieldOffset(3, profileUrlOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} score
 */
com.clue.fbs.FBPlayer.addScore = function(builder, score) {
  builder.addFieldInt16(4, score, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} towerLevel
 */
com.clue.fbs.FBPlayer.addTowerLevel = function(builder, towerLevel) {
  builder.addFieldInt8(5, towerLevel, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} hero
 */
com.clue.fbs.FBPlayer.addHero = function(builder, hero) {
  builder.addFieldInt16(6, hero, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} heroDeadTime
 */
com.clue.fbs.FBPlayer.addHeroDeadTime = function(builder, heroDeadTime) {
  builder.addFieldInt16(7, heroDeadTime, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} unitsOffset
 */
com.clue.fbs.FBPlayer.addUnits = function(builder, unitsOffset) {
  builder.addFieldOffset(8, unitsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBPlayer.createUnitsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.FBPlayer.startUnitsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} killHeroCount
 */
com.clue.fbs.FBPlayer.addKillHeroCount = function(builder, killHeroCount) {
  builder.addFieldInt16(9, killHeroCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} killPetCount
 */
com.clue.fbs.FBPlayer.addKillPetCount = function(builder, killPetCount) {
  builder.addFieldInt16(10, killPetCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} deadCount
 */
com.clue.fbs.FBPlayer.addDeadCount = function(builder, deadCount) {
  builder.addFieldInt8(11, deadCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dealToHero
 */
com.clue.fbs.FBPlayer.addDealToHero = function(builder, dealToHero) {
  builder.addFieldInt32(12, dealToHero, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dealToPet
 */
com.clue.fbs.FBPlayer.addDealToPet = function(builder, dealToPet) {
  builder.addFieldInt32(13, dealToPet, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} damageFromHero
 */
com.clue.fbs.FBPlayer.addDamageFromHero = function(builder, damageFromHero) {
  builder.addFieldInt32(14, damageFromHero, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} damageFromPet
 */
com.clue.fbs.FBPlayer.addDamageFromPet = function(builder, damageFromPet) {
  builder.addFieldInt32(15, damageFromPet, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBPlayer.endFBPlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.FBRoomSet = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBRoomSet}
 */
com.clue.fbs.FBRoomSet.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.FBRoomSet=} obj
 * @returns {com.clue.fbs.FBRoomSet}
 */
com.clue.fbs.FBRoomSet.getRootAsFBRoomSet = function(bb, obj) {
  return (obj || new com.clue.fbs.FBRoomSet).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {com.clue.fbs.LeagueType}
 */
com.clue.fbs.FBRoomSet.prototype.league = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {com.clue.fbs.LeagueType} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.LeagueType.Bronze;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoomSet.prototype.openRoomCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoomSet.prototype.playRoomCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBRoom=} obj
 * @returns {com.clue.fbs.FBRoom}
 */
com.clue.fbs.FBRoomSet.prototype.openRooms = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new com.clue.fbs.FBRoom).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoomSet.prototype.openRoomsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBRoom=} obj
 * @returns {com.clue.fbs.FBRoom}
 */
com.clue.fbs.FBRoomSet.prototype.playRooms = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new com.clue.fbs.FBRoom).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoomSet.prototype.playRoomsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.FBRoomSet.startFBRoomSet = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.LeagueType} league
 */
com.clue.fbs.FBRoomSet.addLeague = function(builder, league) {
  builder.addFieldInt8(0, league, com.clue.fbs.LeagueType.Bronze);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} openRoomCount
 */
com.clue.fbs.FBRoomSet.addOpenRoomCount = function(builder, openRoomCount) {
  builder.addFieldInt32(1, openRoomCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playRoomCount
 */
com.clue.fbs.FBRoomSet.addPlayRoomCount = function(builder, playRoomCount) {
  builder.addFieldInt32(2, playRoomCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} openRoomsOffset
 */
com.clue.fbs.FBRoomSet.addOpenRooms = function(builder, openRoomsOffset) {
  builder.addFieldOffset(3, openRoomsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBRoomSet.createOpenRoomsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.FBRoomSet.startOpenRoomsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playRoomsOffset
 */
com.clue.fbs.FBRoomSet.addPlayRooms = function(builder, playRoomsOffset) {
  builder.addFieldOffset(4, playRoomsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBRoomSet.createPlayRoomsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.FBRoomSet.startPlayRoomsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBRoomSet.endFBRoomSet = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.FBRoom = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBRoom}
 */
com.clue.fbs.FBRoom.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.FBRoom=} obj
 * @returns {com.clue.fbs.FBRoom}
 */
com.clue.fbs.FBRoom.getRootAsFBRoom = function(bb, obj) {
  return (obj || new com.clue.fbs.FBRoom).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
com.clue.fbs.FBRoom.prototype.roomId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {com.clue.fbs.LeagueType}
 */
com.clue.fbs.FBRoom.prototype.league = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {com.clue.fbs.LeagueType} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.LeagueType.Bronze;
};

/**
 * @returns {com.clue.fbs.RoomState}
 */
com.clue.fbs.FBRoom.prototype.state = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {com.clue.fbs.RoomState} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.RoomState.Open;
};

/**
 * @returns {flatbuffers.Long}
 */
com.clue.fbs.FBRoom.prototype.openSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : flatbuffers.Long.ZERO;
};

/**
 * @returns {flatbuffers.Long}
 */
com.clue.fbs.FBRoom.prototype.startSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : flatbuffers.Long.ZERO;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoom.prototype.memberCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBPlayer=} obj
 * @returns {com.clue.fbs.FBPlayer}
 */
com.clue.fbs.FBRoom.prototype.players = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new com.clue.fbs.FBPlayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBRoom.prototype.playersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.FBRoom.startFBRoom = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} roomIdOffset
 */
com.clue.fbs.FBRoom.addRoomId = function(builder, roomIdOffset) {
  builder.addFieldOffset(0, roomIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.LeagueType} league
 */
com.clue.fbs.FBRoom.addLeague = function(builder, league) {
  builder.addFieldInt8(1, league, com.clue.fbs.LeagueType.Bronze);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.RoomState} state
 */
com.clue.fbs.FBRoom.addState = function(builder, state) {
  builder.addFieldInt8(2, state, com.clue.fbs.RoomState.Open);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} openSec
 */
com.clue.fbs.FBRoom.addOpenSec = function(builder, openSec) {
  builder.addFieldInt64(3, openSec, flatbuffers.Long.ZERO);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} startSec
 */
com.clue.fbs.FBRoom.addStartSec = function(builder, startSec) {
  builder.addFieldInt64(4, startSec, flatbuffers.Long.ZERO);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} memberCount
 */
com.clue.fbs.FBRoom.addMemberCount = function(builder, memberCount) {
  builder.addFieldInt8(5, memberCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playersOffset
 */
com.clue.fbs.FBRoom.addPlayers = function(builder, playersOffset) {
  builder.addFieldOffset(6, playersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBRoom.createPlayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.FBRoom.startPlayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBRoom.endFBRoom = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.FBUnit = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBUnit}
 */
com.clue.fbs.FBUnit.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {com.clue.fbs.FBUnit=} obj
 * @returns {com.clue.fbs.FBUnit}
 */
com.clue.fbs.FBUnit.getRootAsFBUnit = function(bb, obj) {
  return (obj || new com.clue.fbs.FBUnit).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.name = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.level = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.exp = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {com.clue.fbs.UnitType}
 */
com.clue.fbs.FBUnit.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {com.clue.fbs.UnitType} */ (this.bb.readInt8(this.bb_pos + offset)) : com.clue.fbs.UnitType.Hero;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.hp = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {com.clue.fbs.FBVec2=} obj
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBUnit.prototype.position = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new com.clue.fbs.FBVec2).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {com.clue.fbs.FBVecMini2=} obj
 * @returns {com.clue.fbs.FBVecMini2}
 */
com.clue.fbs.FBUnit.prototype.direction = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new com.clue.fbs.FBVecMini2).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.skill1FireSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.skill2FireSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.skill3FireSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.skillSpecialFireSec = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {com.clue.fbs.FBAbnormal=} obj
 * @returns {com.clue.fbs.FBAbnormal}
 */
com.clue.fbs.FBUnit.prototype.abnormalList = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? (obj || new com.clue.fbs.FBAbnormal).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnit.prototype.abnormalListLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
com.clue.fbs.FBUnit.startFBUnit = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
com.clue.fbs.FBUnit.addKey = function(builder, key) {
  builder.addFieldInt16(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} name
 */
com.clue.fbs.FBUnit.addName = function(builder, name) {
  builder.addFieldInt16(1, name, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} level
 */
com.clue.fbs.FBUnit.addLevel = function(builder, level) {
  builder.addFieldInt8(2, level, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} exp
 */
com.clue.fbs.FBUnit.addExp = function(builder, exp) {
  builder.addFieldInt16(3, exp, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.UnitType} type
 */
com.clue.fbs.FBUnit.addType = function(builder, type) {
  builder.addFieldInt8(4, type, com.clue.fbs.UnitType.Hero);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} hp
 */
com.clue.fbs.FBUnit.addHp = function(builder, hp) {
  builder.addFieldInt16(5, hp, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionOffset
 */
com.clue.fbs.FBUnit.addPosition = function(builder, positionOffset) {
  builder.addFieldStruct(6, positionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} directionOffset
 */
com.clue.fbs.FBUnit.addDirection = function(builder, directionOffset) {
  builder.addFieldStruct(7, directionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} skill1FireSec
 */
com.clue.fbs.FBUnit.addSkill1FireSec = function(builder, skill1FireSec) {
  builder.addFieldInt16(8, skill1FireSec, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} skill2FireSec
 */
com.clue.fbs.FBUnit.addSkill2FireSec = function(builder, skill2FireSec) {
  builder.addFieldInt16(9, skill2FireSec, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} skill3FireSec
 */
com.clue.fbs.FBUnit.addSkill3FireSec = function(builder, skill3FireSec) {
  builder.addFieldInt16(10, skill3FireSec, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} skillSpecialFireSec
 */
com.clue.fbs.FBUnit.addSkillSpecialFireSec = function(builder, skillSpecialFireSec) {
  builder.addFieldInt16(11, skillSpecialFireSec, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} abnormalListOffset
 */
com.clue.fbs.FBUnit.addAbnormalList = function(builder, abnormalListOffset) {
  builder.addFieldOffset(12, abnormalListOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
com.clue.fbs.FBUnit.startAbnormalListVector = function(builder, numElems) {
  builder.startVector(12, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBUnit.endFBUnit = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
com.clue.fbs.FBAbnormal = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBAbnormal}
 */
com.clue.fbs.FBAbnormal.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {com.clue.fbs.AbnormalType}
 */
com.clue.fbs.FBAbnormal.prototype.type = function() {
  return /** @type {com.clue.fbs.AbnormalType} */ (this.bb.readInt8(this.bb_pos));
};

/**
 * @returns {number}
 */
com.clue.fbs.FBAbnormal.prototype.from = function() {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBAbnormal.prototype.to = function() {
  return this.bb.readInt16(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBAbnormal.prototype.at = function() {
  return this.bb.readInt16(this.bb_pos + 6);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBAbnormal.prototype.duration = function() {
  return this.bb.readInt16(this.bb_pos + 8);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBAbnormal.prototype.value = function() {
  return this.bb.readInt16(this.bb_pos + 10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {com.clue.fbs.AbnormalType} type
 * @param {number} from
 * @param {number} to
 * @param {number} at
 * @param {number} duration
 * @param {number} value
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBAbnormal.createFBAbnormal = function(builder, type, from, to, at, duration, value) {
  builder.prep(2, 12);
  builder.writeInt16(value);
  builder.writeInt16(duration);
  builder.writeInt16(at);
  builder.writeInt16(to);
  builder.writeInt16(from);
  builder.pad(1);
  builder.writeInt8(type);
  return builder.offset();
};

/**
 * @constructor
 */
com.clue.fbs.FBUnitOrder = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBUnitOrder}
 */
com.clue.fbs.FBUnitOrder.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitOrder.prototype.from = function() {
  return this.bb.readInt16(this.bb_pos);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitOrder.prototype.target = function() {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @param {com.clue.fbs.FBVec2=} obj
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBUnitOrder.prototype.position = function(obj) {
  return (obj || new com.clue.fbs.FBVec2).__init(this.bb_pos + 4, this.bb);
};

/**
 * @param {com.clue.fbs.FBVec2=} obj
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBUnitOrder.prototype.to = function(obj) {
  return (obj || new com.clue.fbs.FBVec2).__init(this.bb_pos + 8, this.bb);
};

/**
 * @param {com.clue.fbs.FBVecMini2=} obj
 * @returns {com.clue.fbs.FBVecMini2}
 */
com.clue.fbs.FBUnitOrder.prototype.direction = function(obj) {
  return (obj || new com.clue.fbs.FBVecMini2).__init(this.bb_pos + 12, this.bb);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitOrder.prototype.state = function() {
  return this.bb.readInt8(this.bb_pos + 14);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} from
 * @param {number} target
 * @param {number} position_x
 * @param {number} position_z
 * @param {number} to_x
 * @param {number} to_z
 * @param {number} direction_x
 * @param {number} direction_z
 * @param {number} state
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBUnitOrder.createFBUnitOrder = function(builder, from, target, position_x, position_z, to_x, to_z, direction_x, direction_z, state) {
  builder.prep(2, 16);
  builder.pad(1);
  builder.writeInt8(state);
  builder.prep(1, 2);
  builder.writeInt8(direction_z);
  builder.writeInt8(direction_x);
  builder.prep(2, 4);
  builder.writeInt16(to_z);
  builder.writeInt16(to_x);
  builder.prep(2, 4);
  builder.writeInt16(position_z);
  builder.writeInt16(position_x);
  builder.writeInt16(target);
  builder.writeInt16(from);
  return builder.offset();
};

/**
 * @constructor
 */
com.clue.fbs.FBUnitHit = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBUnitHit}
 */
com.clue.fbs.FBUnitHit.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitHit.prototype.from = function() {
  return this.bb.readInt16(this.bb_pos);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitHit.prototype.to = function() {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitHit.prototype.skillId = function() {
  return this.bb.readInt16(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitHit.prototype.rate = function() {
  return this.bb.readInt16(this.bb_pos + 6);
};

/**
 * @param {com.clue.fbs.FBVec2=} obj
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBUnitHit.prototype.force = function(obj) {
  return (obj || new com.clue.fbs.FBVec2).__init(this.bb_pos + 8, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} from
 * @param {number} to
 * @param {number} skillId
 * @param {number} rate
 * @param {number} force_x
 * @param {number} force_z
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBUnitHit.createFBUnitHit = function(builder, from, to, skillId, rate, force_x, force_z) {
  builder.prep(2, 12);
  builder.prep(2, 4);
  builder.writeInt16(force_z);
  builder.writeInt16(force_x);
  builder.writeInt16(rate);
  builder.writeInt16(skillId);
  builder.writeInt16(to);
  builder.writeInt16(from);
  return builder.offset();
};

/**
 * @constructor
 */
com.clue.fbs.FBUnitDamage = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {com.clue.fbs.FBUnitDamage}
 */
com.clue.fbs.FBUnitDamage.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitDamage.prototype.from = function() {
  return this.bb.readInt16(this.bb_pos);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitDamage.prototype.to = function() {
  return this.bb.readInt16(this.bb_pos + 2);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitDamage.prototype.damage = function() {
  return this.bb.readInt16(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
com.clue.fbs.FBUnitDamage.prototype.hp = function() {
  return this.bb.readInt16(this.bb_pos + 6);
};

/**
 * @param {com.clue.fbs.FBVec2=} obj
 * @returns {com.clue.fbs.FBVec2}
 */
com.clue.fbs.FBUnitDamage.prototype.force = function(obj) {
  return (obj || new com.clue.fbs.FBVec2).__init(this.bb_pos + 8, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} from
 * @param {number} to
 * @param {number} damage
 * @param {number} hp
 * @param {number} force_x
 * @param {number} force_z
 * @returns {flatbuffers.Offset}
 */
com.clue.fbs.FBUnitDamage.createFBUnitDamage = function(builder, from, to, damage, hp, force_x, force_z) {
  builder.prep(2, 12);
  builder.prep(2, 4);
  builder.writeInt16(force_z);
  builder.writeInt16(force_x);
  builder.writeInt16(hp);
  builder.writeInt16(damage);
  builder.writeInt16(to);
  builder.writeInt16(from);
  return builder.offset();
};

// Exports for Node.js and RequireJS
this.com = com;
