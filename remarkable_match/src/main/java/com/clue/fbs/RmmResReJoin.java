// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmmResReJoin extends Table {
  public static RmmResReJoin getRootAsRmmResReJoin(ByteBuffer _bb) { return getRootAsRmmResReJoin(_bb, new RmmResReJoin()); }
  public static RmmResReJoin getRootAsRmmResReJoin(ByteBuffer _bb, RmmResReJoin obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmmResReJoin __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public RmmRoom room() { return room(new RmmRoom()); }
  public RmmRoom room(RmmRoom obj) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public long timestamp() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public int resultCode() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createRmmResReJoin(FlatBufferBuilder builder,
      int roomOffset,
      long timestamp,
      int resultCode) {
    builder.startObject(3);
    RmmResReJoin.addTimestamp(builder, timestamp);
    RmmResReJoin.addResultCode(builder, resultCode);
    RmmResReJoin.addRoom(builder, roomOffset);
    return RmmResReJoin.endRmmResReJoin(builder);
  }

  public static void startRmmResReJoin(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addRoom(FlatBufferBuilder builder, int roomOffset) { builder.addOffset(0, roomOffset, 0); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(1, timestamp, 0); }
  public static void addResultCode(FlatBufferBuilder builder, int resultCode) { builder.addInt(2, resultCode, 0); }
  public static int endRmmResReJoin(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

