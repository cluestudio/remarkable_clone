// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmmNotiDamage extends Table {
  public static RmmNotiDamage getRootAsRmmNotiDamage(ByteBuffer _bb) { return getRootAsRmmNotiDamage(_bb, new RmmNotiDamage()); }
  public static RmmNotiDamage getRootAsRmmNotiDamage(ByteBuffer _bb, RmmNotiDamage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmmNotiDamage __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public short sec() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public RmmUnitDamage damages(int j) { return damages(new RmmUnitDamage(), j); }
  public RmmUnitDamage damages(RmmUnitDamage obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__vector(o) + j * 12, bb) : null; }
  public int damagesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createRmmNotiDamage(FlatBufferBuilder builder,
      short sec,
      int damagesOffset) {
    builder.startObject(2);
    RmmNotiDamage.addDamages(builder, damagesOffset);
    RmmNotiDamage.addSec(builder, sec);
    return RmmNotiDamage.endRmmNotiDamage(builder);
  }

  public static void startRmmNotiDamage(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addSec(FlatBufferBuilder builder, short sec) { builder.addShort(0, sec, 0); }
  public static void addDamages(FlatBufferBuilder builder, int damagesOffset) { builder.addOffset(1, damagesOffset, 0); }
  public static void startDamagesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(12, numElems, 2); }
  public static int endRmmNotiDamage(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

