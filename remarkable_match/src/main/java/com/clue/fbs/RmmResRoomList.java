// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmmResRoomList extends Table {
  public static RmmResRoomList getRootAsRmmResRoomList(ByteBuffer _bb) { return getRootAsRmmResRoomList(_bb, new RmmResRoomList()); }
  public static RmmResRoomList getRootAsRmmResRoomList(ByteBuffer _bb, RmmResRoomList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmmResRoomList __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public RmmRoomSet roomSet(int j) { return roomSet(new RmmRoomSet(), j); }
  public RmmRoomSet roomSet(RmmRoomSet obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int roomSetLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createRmmResRoomList(FlatBufferBuilder builder,
      int roomSetOffset) {
    builder.startObject(1);
    RmmResRoomList.addRoomSet(builder, roomSetOffset);
    return RmmResRoomList.endRmmResRoomList(builder);
  }

  public static void startRmmResRoomList(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addRoomSet(FlatBufferBuilder builder, int roomSetOffset) { builder.addOffset(0, roomSetOffset, 0); }
  public static int createRoomSetVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRoomSetVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endRmmResRoomList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

