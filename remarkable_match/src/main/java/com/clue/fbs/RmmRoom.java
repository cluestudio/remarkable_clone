// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmmRoom extends Table {
  public static RmmRoom getRootAsRmmRoom(ByteBuffer _bb) { return getRootAsRmmRoom(_bb, new RmmRoom()); }
  public static RmmRoom getRootAsRmmRoom(ByteBuffer _bb, RmmRoom obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmmRoom __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String roomId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer roomIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public byte league() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte state() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public long startSec() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public short playSec() { int o = __offset(12); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public RmmPlayer player0() { return player0(new RmmPlayer()); }
  public RmmPlayer player0(RmmPlayer obj) { int o = __offset(14); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public RmmPlayer player1() { return player1(new RmmPlayer()); }
  public RmmPlayer player1(RmmPlayer obj) { int o = __offset(16); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static int createRmmRoom(FlatBufferBuilder builder,
      int roomIdOffset,
      byte league,
      byte state,
      long startSec,
      short playSec,
      int player0Offset,
      int player1Offset) {
    builder.startObject(7);
    RmmRoom.addStartSec(builder, startSec);
    RmmRoom.addPlayer1(builder, player1Offset);
    RmmRoom.addPlayer0(builder, player0Offset);
    RmmRoom.addRoomId(builder, roomIdOffset);
    RmmRoom.addPlaySec(builder, playSec);
    RmmRoom.addState(builder, state);
    RmmRoom.addLeague(builder, league);
    return RmmRoom.endRmmRoom(builder);
  }

  public static void startRmmRoom(FlatBufferBuilder builder) { builder.startObject(7); }
  public static void addRoomId(FlatBufferBuilder builder, int roomIdOffset) { builder.addOffset(0, roomIdOffset, 0); }
  public static void addLeague(FlatBufferBuilder builder, byte league) { builder.addByte(1, league, 0); }
  public static void addState(FlatBufferBuilder builder, byte state) { builder.addByte(2, state, 0); }
  public static void addStartSec(FlatBufferBuilder builder, long startSec) { builder.addLong(3, startSec, 0); }
  public static void addPlaySec(FlatBufferBuilder builder, short playSec) { builder.addShort(4, playSec, 0); }
  public static void addPlayer0(FlatBufferBuilder builder, int player0Offset) { builder.addOffset(5, player0Offset, 0); }
  public static void addPlayer1(FlatBufferBuilder builder, int player1Offset) { builder.addOffset(6, player1Offset, 0); }
  public static int endRmmRoom(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

