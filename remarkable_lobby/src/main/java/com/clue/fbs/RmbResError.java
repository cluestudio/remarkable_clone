// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmbResError extends Table {
  public static RmbResError getRootAsRmbResError(ByteBuffer _bb) { return getRootAsRmbResError(_bb, new RmbResError()); }
  public static RmbResError getRootAsRmbResError(ByteBuffer _bb, RmbResError obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmbResError __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int code() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String message() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createRmbResError(FlatBufferBuilder builder,
      int code,
      int messageOffset) {
    builder.startObject(2);
    RmbResError.addMessage(builder, messageOffset);
    RmbResError.addCode(builder, code);
    return RmbResError.endRmbResError(builder);
  }

  public static void startRmbResError(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addInt(0, code, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(1, messageOffset, 0); }
  public static int endRmbResError(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

