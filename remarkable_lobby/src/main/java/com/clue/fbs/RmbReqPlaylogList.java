// automatically generated by the FlatBuffers compiler, do not modify

package com.clue.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public class RmbReqPlaylogList extends Table {
  public static RmbReqPlaylogList getRootAsRmbReqPlaylogList(ByteBuffer _bb) { return getRootAsRmbReqPlaylogList(_bb, new RmbReqPlaylogList()); }
  public static RmbReqPlaylogList getRootAsRmbReqPlaylogList(ByteBuffer _bb, RmbReqPlaylogList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public RmbReqPlaylogList __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long from() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public int count() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createRmbReqPlaylogList(FlatBufferBuilder builder,
      long from,
      int count) {
    builder.startObject(2);
    RmbReqPlaylogList.addFrom(builder, from);
    RmbReqPlaylogList.addCount(builder, count);
    return RmbReqPlaylogList.endRmbReqPlaylogList(builder);
  }

  public static void startRmbReqPlaylogList(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addFrom(FlatBufferBuilder builder, long from) { builder.addLong(0, from, 0); }
  public static void addCount(FlatBufferBuilder builder, int count) { builder.addInt(1, count, 0); }
  public static int endRmbReqPlaylogList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

