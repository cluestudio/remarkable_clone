<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace com\clue\fbs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class RmAccount extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return RmAccount
     */
    public static function getRootAsRmAccount(ByteBuffer $bb)
    {
        $obj = new RmAccount();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return RmAccount
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getUid()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return int
     */
    public function getToken()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    public function getName()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getProfileUrl()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return long
     */
    public function getBirth()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getLong($o + $this->bb_pos) : 0;
    }

    public function getFacebook()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getGoogle()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getGameCenter()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return int
     */
    public function getLevel()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getExp()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @return sbyte
     */
    public function getLeague()
    {
        $o = $this->__offset(24);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getLeaguePoint()
    {
        $o = $this->__offset(26);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    public function getCountry()
    {
        $o = $this->__offset(28);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return long
     */
    public function getLastPlayTime()
    {
        $o = $this->__offset(30);
        return $o != 0 ? $this->bb->getLong($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startRmAccount(FlatBufferBuilder $builder)
    {
        $builder->StartObject(14);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return RmAccount
     */
    public static function createRmAccount(FlatBufferBuilder $builder, $uid, $token, $name, $profileUrl, $birth, $facebook, $google, $gameCenter, $level, $exp, $league, $leaguePoint, $country, $lastPlayTime)
    {
        $builder->startObject(14);
        self::addUid($builder, $uid);
        self::addToken($builder, $token);
        self::addName($builder, $name);
        self::addProfileUrl($builder, $profileUrl);
        self::addBirth($builder, $birth);
        self::addFacebook($builder, $facebook);
        self::addGoogle($builder, $google);
        self::addGameCenter($builder, $gameCenter);
        self::addLevel($builder, $level);
        self::addExp($builder, $exp);
        self::addLeague($builder, $league);
        self::addLeaguePoint($builder, $leaguePoint);
        self::addCountry($builder, $country);
        self::addLastPlayTime($builder, $lastPlayTime);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUid(FlatBufferBuilder $builder, $uid)
    {
        $builder->addOffsetX(0, $uid, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addToken(FlatBufferBuilder $builder, $token)
    {
        $builder->addIntX(1, $token, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addOffsetX(2, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addProfileUrl(FlatBufferBuilder $builder, $profileUrl)
    {
        $builder->addOffsetX(3, $profileUrl, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param long
     * @return void
     */
    public static function addBirth(FlatBufferBuilder $builder, $birth)
    {
        $builder->addLongX(4, $birth, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addFacebook(FlatBufferBuilder $builder, $facebook)
    {
        $builder->addOffsetX(5, $facebook, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addGoogle(FlatBufferBuilder $builder, $google)
    {
        $builder->addOffsetX(6, $google, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addGameCenter(FlatBufferBuilder $builder, $gameCenter)
    {
        $builder->addOffsetX(7, $gameCenter, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addLevel(FlatBufferBuilder $builder, $level)
    {
        $builder->addIntX(8, $level, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addExp(FlatBufferBuilder $builder, $exp)
    {
        $builder->addIntX(9, $exp, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addLeague(FlatBufferBuilder $builder, $league)
    {
        $builder->addSbyteX(10, $league, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addLeaguePoint(FlatBufferBuilder $builder, $leaguePoint)
    {
        $builder->addIntX(11, $leaguePoint, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCountry(FlatBufferBuilder $builder, $country)
    {
        $builder->addOffsetX(12, $country, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param long
     * @return void
     */
    public static function addLastPlayTime(FlatBufferBuilder $builder, $lastPlayTime)
    {
        $builder->addLongX(13, $lastPlayTime, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endRmAccount(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
