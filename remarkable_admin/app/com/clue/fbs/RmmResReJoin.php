<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace com\clue\fbs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class RmmResReJoin extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return RmmResReJoin
     */
    public static function getRootAsRmmResReJoin(ByteBuffer $bb)
    {
        $obj = new RmmResReJoin();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return RmmResReJoin
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getRoom()
    {
        $obj = new RmmRoom();
        $o = $this->__offset(4);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @return long
     */
    public function getTimestamp()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getLong($o + $this->bb_pos) : 0;
    }

    /**
     * @return int
     */
    public function getResultCode()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : \com\clue\fbs\RmResultCode::Success;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startRmmResReJoin(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return RmmResReJoin
     */
    public static function createRmmResReJoin(FlatBufferBuilder $builder, $room, $timestamp, $resultCode)
    {
        $builder->startObject(3);
        self::addRoom($builder, $room);
        self::addTimestamp($builder, $timestamp);
        self::addResultCode($builder, $resultCode);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addRoom(FlatBufferBuilder $builder, $room)
    {
        $builder->addOffsetX(0, $room, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param long
     * @return void
     */
    public static function addTimestamp(FlatBufferBuilder $builder, $timestamp)
    {
        $builder->addLongX(1, $timestamp, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addResultCode(FlatBufferBuilder $builder, $resultCode)
    {
        $builder->addIntX(2, $resultCode, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endRmmResReJoin(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
