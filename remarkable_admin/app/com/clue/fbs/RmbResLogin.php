<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace com\clue\fbs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class RmbResLogin extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return RmbResLogin
     */
    public static function getRootAsRmbResLogin(ByteBuffer $bb)
    {
        $obj = new RmbResLogin();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return RmbResLogin
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getAccount()
    {
        $obj = new RmAccount();
        $o = $this->__offset(4);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    public function getAssets()
    {
        $obj = new RmAssets();
        $o = $this->__offset(6);
        return $o != 0 ? $obj->init($o + $this->bb_pos, $this->bb) : 0;
    }

    /**
     * @return int
     */
    public function getMetaVersion()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /**
     * @param int offset
     * @return sbyte
     */
    public function getMetaSet($j)
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getSbyte($this->__vector($o) + $j * 1) : 0;
    }

    /**
     * @return int
     */
    public function getMetaSetLength()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startRmbResLogin(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return RmbResLogin
     */
    public static function createRmbResLogin(FlatBufferBuilder $builder, $account, $assets, $metaVersion, $metaSet)
    {
        $builder->startObject(4);
        self::addAccount($builder, $account);
        self::addAssets($builder, $assets);
        self::addMetaVersion($builder, $metaVersion);
        self::addMetaSet($builder, $metaSet);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addAccount(FlatBufferBuilder $builder, $account)
    {
        $builder->addOffsetX(0, $account, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addAssets(FlatBufferBuilder $builder, $assets)
    {
        $builder->addStructX(1, $assets, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addMetaVersion(FlatBufferBuilder $builder, $metaVersion)
    {
        $builder->addIntX(2, $metaVersion, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addMetaSet(FlatBufferBuilder $builder, $metaSet)
    {
        $builder->addOffsetX(3, $metaSet, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createMetaSetVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(1, count($data), 1);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->addSbyte($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startMetaSetVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(1, $numElems, 1);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endRmbResLogin(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
