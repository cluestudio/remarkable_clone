<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace com\clue\fbs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class RmmNotiLvUp extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return RmmNotiLvUp
     */
    public static function getRootAsRmmNotiLvUp(ByteBuffer $bb)
    {
        $obj = new RmmNotiLvUp();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return RmmNotiLvUp
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return short
     */
    public function getKey()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getShort($o + $this->bb_pos) : 0;
    }

    /**
     * @return sbyte
     */
    public function getLevel()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : 0;
    }

    /**
     * @return short
     */
    public function getExp()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getShort($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startRmmNotiLvUp(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return RmmNotiLvUp
     */
    public static function createRmmNotiLvUp(FlatBufferBuilder $builder, $key, $level, $exp)
    {
        $builder->startObject(3);
        self::addKey($builder, $key);
        self::addLevel($builder, $level);
        self::addExp($builder, $exp);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param short
     * @return void
     */
    public static function addKey(FlatBufferBuilder $builder, $key)
    {
        $builder->addShortX(0, $key, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addLevel(FlatBufferBuilder $builder, $level)
    {
        $builder->addSbyteX(1, $level, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param short
     * @return void
     */
    public static function addExp(FlatBufferBuilder $builder, $exp)
    {
        $builder->addShortX(2, $exp, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endRmmNotiLvUp(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
