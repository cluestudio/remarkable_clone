<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace com\clue\fbs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class RmbResUseHero extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return RmbResUseHero
     */
    public static function getRootAsRmbResUseHero(ByteBuffer $bb)
    {
        $obj = new RmbResUseHero();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return RmbResUseHero
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return short
     */
    public function getName()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getShort($o + $this->bb_pos) : \com\clue\fbs\RmUnitName::None;
    }

    /**
     * @return long
     */
    public function getLastPlay()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getLong($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startRmbResUseHero(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return RmbResUseHero
     */
    public static function createRmbResUseHero(FlatBufferBuilder $builder, $name, $lastPlay)
    {
        $builder->startObject(2);
        self::addName($builder, $name);
        self::addLastPlay($builder, $lastPlay);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param short
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addShortX(0, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param long
     * @return void
     */
    public static function addLastPlay(FlatBufferBuilder $builder, $lastPlay)
    {
        $builder->addLongX(1, $lastPlay, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endRmbResUseHero(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
